/*
 * Sage HR API
 * All requests are required to be sent to your subdomain. To learn how to enable API in your Sage HR account, please visit https://support.sage.hr/en/articles/3246469-how-does-cakehr-api-work
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * LeaveManagementGetTimeOffPolicyByIdResponseDataInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class LeaveManagementGetTimeOffPolicyByIdResponseDataInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Double id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_DO_NOT_ACCRUE = "do_not_accrue";
  @SerializedName(SERIALIZED_NAME_DO_NOT_ACCRUE)
  private Boolean doNotAccrue;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public static final String SERIALIZED_NAME_DEFAULT_ALLOWANCE = "default_allowance";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ALLOWANCE)
  private String defaultAllowance;

  public static final String SERIALIZED_NAME_MAX_CARRYOVER = "max_carryover";
  @SerializedName(SERIALIZED_NAME_MAX_CARRYOVER)
  private String maxCarryover;

  public static final String SERIALIZED_NAME_ACCRUE_TYPE = "accrue_type";
  @SerializedName(SERIALIZED_NAME_ACCRUE_TYPE)
  private String accrueType;

  public static final String SERIALIZED_NAME_ENABLE_EMPLOYEE_ACCESS = "enable_employee_access";
  @SerializedName(SERIALIZED_NAME_ENABLE_EMPLOYEE_ACCESS)
  private Boolean enableEmployeeAccess;

  public static final String SERIALIZED_NAME_ONLY_FULL_DAYS = "only_full_days";
  @SerializedName(SERIALIZED_NAME_ONLY_FULL_DAYS)
  private Boolean onlyFullDays;

  public static final String SERIALIZED_NAME_ENABLE_PROBATION_PERIOD = "enable_probation_period";
  @SerializedName(SERIALIZED_NAME_ENABLE_PROBATION_PERIOD)
  private Boolean enableProbationPeriod;

  public static final String SERIALIZED_NAME_DONT_ALLOW_NEGATIVE_AMOUNT = "dont_allow_negative_amount";
  @SerializedName(SERIALIZED_NAME_DONT_ALLOW_NEGATIVE_AMOUNT)
  private Boolean dontAllowNegativeAmount;

  public static final String SERIALIZED_NAME_REQUESTS_IN_ADVANCE_REQUIRED = "requests_in_advance_required";
  @SerializedName(SERIALIZED_NAME_REQUESTS_IN_ADVANCE_REQUIRED)
  private Boolean requestsInAdvanceRequired;

  public static final String SERIALIZED_NAME_ENABLE_MINIMUM_DAYS = "enable_minimum_days";
  @SerializedName(SERIALIZED_NAME_ENABLE_MINIMUM_DAYS)
  private Boolean enableMinimumDays;

  public static final String SERIALIZED_NAME_ENABLE_LIMITED_DAYS = "enable_limited_days";
  @SerializedName(SERIALIZED_NAME_ENABLE_LIMITED_DAYS)
  private Boolean enableLimitedDays;

  public static final String SERIALIZED_NAME_ENABLE_DEPENDENT_POLICY_DOUBLE_QUOTE = "enable_dependent_policy&quot;";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEPENDENT_POLICY_DOUBLE_QUOTE)
  private Boolean enableDependentPolicyDoubleQuote;

  public static final String SERIALIZED_NAME_BLOCKS_ENABLED = "blocks_enabled";
  @SerializedName(SERIALIZED_NAME_BLOCKS_ENABLED)
  private Boolean blocksEnabled;

  public static final String SERIALIZED_NAME_NO_RESET = "no_reset";
  @SerializedName(SERIALIZED_NAME_NO_RESET)
  private Boolean noReset;

  public static final String SERIALIZED_NAME_TERMINATION_RECALCULATION = "termination_recalculation";
  @SerializedName(SERIALIZED_NAME_TERMINATION_RECALCULATION)
  private Boolean terminationRecalculation;

  public static final String SERIALIZED_NAME_ENABLE_SERVICE_ACCRUALS = "enable_service_accruals";
  @SerializedName(SERIALIZED_NAME_ENABLE_SERVICE_ACCRUALS)
  private Boolean enableServiceAccruals;

  public static final String SERIALIZED_NAME_CHILD_ALLOWANCE_ENABLED = "child_allowance_enabled";
  @SerializedName(SERIALIZED_NAME_CHILD_ALLOWANCE_ENABLED)
  private Boolean childAllowanceEnabled;

  public static final String SERIALIZED_NAME_ENABLE_NEGATIVE_CARRYOVER = "enable_negative_carryover";
  @SerializedName(SERIALIZED_NAME_ENABLE_NEGATIVE_CARRYOVER)
  private Boolean enableNegativeCarryover;

  public static final String SERIALIZED_NAME_MAX_ACCRUAL = "max_accrual";
  @SerializedName(SERIALIZED_NAME_MAX_ACCRUAL)
  private Boolean maxAccrual;

  public static final String SERIALIZED_NAME_ACCRUE_AT_START = "accrue_at_start";
  @SerializedName(SERIALIZED_NAME_ACCRUE_AT_START)
  private Boolean accrueAtStart;

  public static final String SERIALIZED_NAME_ENABLE_MONTHLY_EXPIRATION = "enable_monthly_expiration";
  @SerializedName(SERIALIZED_NAME_ENABLE_MONTHLY_EXPIRATION)
  private Boolean enableMonthlyExpiration;

  public static final String SERIALIZED_NAME_STARTER_MONTHLY_ACCRUAL_LIMITATION = "starter_monthly_accrual_limitation";
  @SerializedName(SERIALIZED_NAME_STARTER_MONTHLY_ACCRUAL_LIMITATION)
  private Boolean starterMonthlyAccrualLimitation;

  public static final String SERIALIZED_NAME_STARTER_YEARLY_ACCRUAL_LIMITATION = "starter_yearly_accrual_limitation";
  @SerializedName(SERIALIZED_NAME_STARTER_YEARLY_ACCRUAL_LIMITATION)
  private Boolean starterYearlyAccrualLimitation;

  public static final String SERIALIZED_NAME_AUTO_APPROVES = "auto_approves";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVES)
  private Boolean autoApproves;

  public static final String SERIALIZED_NAME_ENABLE_SPECIFIC_APPROVERS = "enable_specific_approvers";
  @SerializedName(SERIALIZED_NAME_ENABLE_SPECIFIC_APPROVERS)
  private Boolean enableSpecificApprovers;

  public static final String SERIALIZED_NAME_OVERRIDE_APPROVERS_ENABLED = "override_approvers_enabled";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_APPROVERS_ENABLED)
  private Boolean overrideApproversEnabled;

  public static final String SERIALIZED_NAME_ENABLE_DUPLICATE_TIME_OFFS = "enable_duplicate_time_offs";
  @SerializedName(SERIALIZED_NAME_ENABLE_DUPLICATE_TIME_OFFS)
  private Boolean enableDuplicateTimeOffs;

  public static final String SERIALIZED_NAME_ENABLE_REPLACEMENT = "enable_replacement";
  @SerializedName(SERIALIZED_NAME_ENABLE_REPLACEMENT)
  private Boolean enableReplacement;

  public static final String SERIALIZED_NAME_REPLACEMENT_REQUIRED = "replacement_required";
  @SerializedName(SERIALIZED_NAME_REPLACEMENT_REQUIRED)
  private Boolean replacementRequired;

  public static final String SERIALIZED_NAME_ENABLE_SCOPPED_REPLACEMENT = "enable_scopped_replacement";
  @SerializedName(SERIALIZED_NAME_ENABLE_SCOPPED_REPLACEMENT)
  private Boolean enableScoppedReplacement;

  public static final String SERIALIZED_NAME_ENABLE_REPLACEMENT_AWAY = "enable_replacement_away";
  @SerializedName(SERIALIZED_NAME_ENABLE_REPLACEMENT_AWAY)
  private Boolean enableReplacementAway;

  public static final String SERIALIZED_NAME_ENABLE_DETAILS = "enable_details";
  @SerializedName(SERIALIZED_NAME_ENABLE_DETAILS)
  private Boolean enableDetails;

  public static final String SERIALIZED_NAME_REQUIRE_DETAILS = "require_details";
  @SerializedName(SERIALIZED_NAME_REQUIRE_DETAILS)
  private Boolean requireDetails;

  public static final String SERIALIZED_NAME_ADDITIONAL_FIELD = "additional_field";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FIELD)
  private Boolean additionalField;

  public static final String SERIALIZED_NAME_ENABLE_ATTACHMENT = "enable_attachment";
  @SerializedName(SERIALIZED_NAME_ENABLE_ATTACHMENT)
  private Boolean enableAttachment;

  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner() {
  }

  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner id(Double id) {
    
    
    
    
    this.id = id;
    return this;
  }

  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner id(Integer id) {
    
    
    
    
    this.id = id.doubleValue();
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Double getId() {
    return id;
  }


  public void setId(Double id) {
    
    
    
    this.id = id;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Vacation", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner color(String color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "#3a7dd8", value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    
    
    
    this.color = color;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner doNotAccrue(Boolean doNotAccrue) {
    
    
    
    
    this.doNotAccrue = doNotAccrue;
    return this;
  }

   /**
   * Get doNotAccrue
   * @return doNotAccrue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getDoNotAccrue() {
    return doNotAccrue;
  }


  public void setDoNotAccrue(Boolean doNotAccrue) {
    
    
    
    this.doNotAccrue = doNotAccrue;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner unit(String unit) {
    
    
    
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "days", value = "")

  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    
    
    
    this.unit = unit;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner defaultAllowance(String defaultAllowance) {
    
    
    
    
    this.defaultAllowance = defaultAllowance;
    return this;
  }

   /**
   * Get defaultAllowance
   * @return defaultAllowance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25.0", value = "")

  public String getDefaultAllowance() {
    return defaultAllowance;
  }


  public void setDefaultAllowance(String defaultAllowance) {
    
    
    
    this.defaultAllowance = defaultAllowance;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner maxCarryover(String maxCarryover) {
    
    
    
    
    this.maxCarryover = maxCarryover;
    return this;
  }

   /**
   * Get maxCarryover
   * @return maxCarryover
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.0", value = "")

  public String getMaxCarryover() {
    return maxCarryover;
  }


  public void setMaxCarryover(String maxCarryover) {
    
    
    
    this.maxCarryover = maxCarryover;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner accrueType(String accrueType) {
    
    
    
    
    this.accrueType = accrueType;
    return this;
  }

   /**
   * Get accrueType
   * @return accrueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "yearly", value = "")

  public String getAccrueType() {
    return accrueType;
  }


  public void setAccrueType(String accrueType) {
    
    
    
    this.accrueType = accrueType;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableEmployeeAccess(Boolean enableEmployeeAccess) {
    
    
    
    
    this.enableEmployeeAccess = enableEmployeeAccess;
    return this;
  }

   /**
   * Get enableEmployeeAccess
   * @return enableEmployeeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getEnableEmployeeAccess() {
    return enableEmployeeAccess;
  }


  public void setEnableEmployeeAccess(Boolean enableEmployeeAccess) {
    
    
    
    this.enableEmployeeAccess = enableEmployeeAccess;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner onlyFullDays(Boolean onlyFullDays) {
    
    
    
    
    this.onlyFullDays = onlyFullDays;
    return this;
  }

   /**
   * Get onlyFullDays
   * @return onlyFullDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getOnlyFullDays() {
    return onlyFullDays;
  }


  public void setOnlyFullDays(Boolean onlyFullDays) {
    
    
    
    this.onlyFullDays = onlyFullDays;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableProbationPeriod(Boolean enableProbationPeriod) {
    
    
    
    
    this.enableProbationPeriod = enableProbationPeriod;
    return this;
  }

   /**
   * Get enableProbationPeriod
   * @return enableProbationPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableProbationPeriod() {
    return enableProbationPeriod;
  }


  public void setEnableProbationPeriod(Boolean enableProbationPeriod) {
    
    
    
    this.enableProbationPeriod = enableProbationPeriod;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner dontAllowNegativeAmount(Boolean dontAllowNegativeAmount) {
    
    
    
    
    this.dontAllowNegativeAmount = dontAllowNegativeAmount;
    return this;
  }

   /**
   * Get dontAllowNegativeAmount
   * @return dontAllowNegativeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getDontAllowNegativeAmount() {
    return dontAllowNegativeAmount;
  }


  public void setDontAllowNegativeAmount(Boolean dontAllowNegativeAmount) {
    
    
    
    this.dontAllowNegativeAmount = dontAllowNegativeAmount;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner requestsInAdvanceRequired(Boolean requestsInAdvanceRequired) {
    
    
    
    
    this.requestsInAdvanceRequired = requestsInAdvanceRequired;
    return this;
  }

   /**
   * Get requestsInAdvanceRequired
   * @return requestsInAdvanceRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getRequestsInAdvanceRequired() {
    return requestsInAdvanceRequired;
  }


  public void setRequestsInAdvanceRequired(Boolean requestsInAdvanceRequired) {
    
    
    
    this.requestsInAdvanceRequired = requestsInAdvanceRequired;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableMinimumDays(Boolean enableMinimumDays) {
    
    
    
    
    this.enableMinimumDays = enableMinimumDays;
    return this;
  }

   /**
   * Get enableMinimumDays
   * @return enableMinimumDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableMinimumDays() {
    return enableMinimumDays;
  }


  public void setEnableMinimumDays(Boolean enableMinimumDays) {
    
    
    
    this.enableMinimumDays = enableMinimumDays;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableLimitedDays(Boolean enableLimitedDays) {
    
    
    
    
    this.enableLimitedDays = enableLimitedDays;
    return this;
  }

   /**
   * Get enableLimitedDays
   * @return enableLimitedDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableLimitedDays() {
    return enableLimitedDays;
  }


  public void setEnableLimitedDays(Boolean enableLimitedDays) {
    
    
    
    this.enableLimitedDays = enableLimitedDays;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableDependentPolicyDoubleQuote(Boolean enableDependentPolicyDoubleQuote) {
    
    
    
    
    this.enableDependentPolicyDoubleQuote = enableDependentPolicyDoubleQuote;
    return this;
  }

   /**
   * Get enableDependentPolicyDoubleQuote
   * @return enableDependentPolicyDoubleQuote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableDependentPolicyDoubleQuote() {
    return enableDependentPolicyDoubleQuote;
  }


  public void setEnableDependentPolicyDoubleQuote(Boolean enableDependentPolicyDoubleQuote) {
    
    
    
    this.enableDependentPolicyDoubleQuote = enableDependentPolicyDoubleQuote;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner blocksEnabled(Boolean blocksEnabled) {
    
    
    
    
    this.blocksEnabled = blocksEnabled;
    return this;
  }

   /**
   * Get blocksEnabled
   * @return blocksEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getBlocksEnabled() {
    return blocksEnabled;
  }


  public void setBlocksEnabled(Boolean blocksEnabled) {
    
    
    
    this.blocksEnabled = blocksEnabled;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner noReset(Boolean noReset) {
    
    
    
    
    this.noReset = noReset;
    return this;
  }

   /**
   * Get noReset
   * @return noReset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getNoReset() {
    return noReset;
  }


  public void setNoReset(Boolean noReset) {
    
    
    
    this.noReset = noReset;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner terminationRecalculation(Boolean terminationRecalculation) {
    
    
    
    
    this.terminationRecalculation = terminationRecalculation;
    return this;
  }

   /**
   * Get terminationRecalculation
   * @return terminationRecalculation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getTerminationRecalculation() {
    return terminationRecalculation;
  }


  public void setTerminationRecalculation(Boolean terminationRecalculation) {
    
    
    
    this.terminationRecalculation = terminationRecalculation;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableServiceAccruals(Boolean enableServiceAccruals) {
    
    
    
    
    this.enableServiceAccruals = enableServiceAccruals;
    return this;
  }

   /**
   * Get enableServiceAccruals
   * @return enableServiceAccruals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableServiceAccruals() {
    return enableServiceAccruals;
  }


  public void setEnableServiceAccruals(Boolean enableServiceAccruals) {
    
    
    
    this.enableServiceAccruals = enableServiceAccruals;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner childAllowanceEnabled(Boolean childAllowanceEnabled) {
    
    
    
    
    this.childAllowanceEnabled = childAllowanceEnabled;
    return this;
  }

   /**
   * Get childAllowanceEnabled
   * @return childAllowanceEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getChildAllowanceEnabled() {
    return childAllowanceEnabled;
  }


  public void setChildAllowanceEnabled(Boolean childAllowanceEnabled) {
    
    
    
    this.childAllowanceEnabled = childAllowanceEnabled;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableNegativeCarryover(Boolean enableNegativeCarryover) {
    
    
    
    
    this.enableNegativeCarryover = enableNegativeCarryover;
    return this;
  }

   /**
   * Get enableNegativeCarryover
   * @return enableNegativeCarryover
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableNegativeCarryover() {
    return enableNegativeCarryover;
  }


  public void setEnableNegativeCarryover(Boolean enableNegativeCarryover) {
    
    
    
    this.enableNegativeCarryover = enableNegativeCarryover;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner maxAccrual(Boolean maxAccrual) {
    
    
    
    
    this.maxAccrual = maxAccrual;
    return this;
  }

   /**
   * Get maxAccrual
   * @return maxAccrual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getMaxAccrual() {
    return maxAccrual;
  }


  public void setMaxAccrual(Boolean maxAccrual) {
    
    
    
    this.maxAccrual = maxAccrual;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner accrueAtStart(Boolean accrueAtStart) {
    
    
    
    
    this.accrueAtStart = accrueAtStart;
    return this;
  }

   /**
   * Get accrueAtStart
   * @return accrueAtStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getAccrueAtStart() {
    return accrueAtStart;
  }


  public void setAccrueAtStart(Boolean accrueAtStart) {
    
    
    
    this.accrueAtStart = accrueAtStart;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableMonthlyExpiration(Boolean enableMonthlyExpiration) {
    
    
    
    
    this.enableMonthlyExpiration = enableMonthlyExpiration;
    return this;
  }

   /**
   * Get enableMonthlyExpiration
   * @return enableMonthlyExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableMonthlyExpiration() {
    return enableMonthlyExpiration;
  }


  public void setEnableMonthlyExpiration(Boolean enableMonthlyExpiration) {
    
    
    
    this.enableMonthlyExpiration = enableMonthlyExpiration;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner starterMonthlyAccrualLimitation(Boolean starterMonthlyAccrualLimitation) {
    
    
    
    
    this.starterMonthlyAccrualLimitation = starterMonthlyAccrualLimitation;
    return this;
  }

   /**
   * Get starterMonthlyAccrualLimitation
   * @return starterMonthlyAccrualLimitation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getStarterMonthlyAccrualLimitation() {
    return starterMonthlyAccrualLimitation;
  }


  public void setStarterMonthlyAccrualLimitation(Boolean starterMonthlyAccrualLimitation) {
    
    
    
    this.starterMonthlyAccrualLimitation = starterMonthlyAccrualLimitation;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner starterYearlyAccrualLimitation(Boolean starterYearlyAccrualLimitation) {
    
    
    
    
    this.starterYearlyAccrualLimitation = starterYearlyAccrualLimitation;
    return this;
  }

   /**
   * Get starterYearlyAccrualLimitation
   * @return starterYearlyAccrualLimitation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getStarterYearlyAccrualLimitation() {
    return starterYearlyAccrualLimitation;
  }


  public void setStarterYearlyAccrualLimitation(Boolean starterYearlyAccrualLimitation) {
    
    
    
    this.starterYearlyAccrualLimitation = starterYearlyAccrualLimitation;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner autoApproves(Boolean autoApproves) {
    
    
    
    
    this.autoApproves = autoApproves;
    return this;
  }

   /**
   * Get autoApproves
   * @return autoApproves
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getAutoApproves() {
    return autoApproves;
  }


  public void setAutoApproves(Boolean autoApproves) {
    
    
    
    this.autoApproves = autoApproves;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableSpecificApprovers(Boolean enableSpecificApprovers) {
    
    
    
    
    this.enableSpecificApprovers = enableSpecificApprovers;
    return this;
  }

   /**
   * Get enableSpecificApprovers
   * @return enableSpecificApprovers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableSpecificApprovers() {
    return enableSpecificApprovers;
  }


  public void setEnableSpecificApprovers(Boolean enableSpecificApprovers) {
    
    
    
    this.enableSpecificApprovers = enableSpecificApprovers;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner overrideApproversEnabled(Boolean overrideApproversEnabled) {
    
    
    
    
    this.overrideApproversEnabled = overrideApproversEnabled;
    return this;
  }

   /**
   * Get overrideApproversEnabled
   * @return overrideApproversEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getOverrideApproversEnabled() {
    return overrideApproversEnabled;
  }


  public void setOverrideApproversEnabled(Boolean overrideApproversEnabled) {
    
    
    
    this.overrideApproversEnabled = overrideApproversEnabled;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableDuplicateTimeOffs(Boolean enableDuplicateTimeOffs) {
    
    
    
    
    this.enableDuplicateTimeOffs = enableDuplicateTimeOffs;
    return this;
  }

   /**
   * Get enableDuplicateTimeOffs
   * @return enableDuplicateTimeOffs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableDuplicateTimeOffs() {
    return enableDuplicateTimeOffs;
  }


  public void setEnableDuplicateTimeOffs(Boolean enableDuplicateTimeOffs) {
    
    
    
    this.enableDuplicateTimeOffs = enableDuplicateTimeOffs;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableReplacement(Boolean enableReplacement) {
    
    
    
    
    this.enableReplacement = enableReplacement;
    return this;
  }

   /**
   * Get enableReplacement
   * @return enableReplacement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableReplacement() {
    return enableReplacement;
  }


  public void setEnableReplacement(Boolean enableReplacement) {
    
    
    
    this.enableReplacement = enableReplacement;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner replacementRequired(Boolean replacementRequired) {
    
    
    
    
    this.replacementRequired = replacementRequired;
    return this;
  }

   /**
   * Get replacementRequired
   * @return replacementRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getReplacementRequired() {
    return replacementRequired;
  }


  public void setReplacementRequired(Boolean replacementRequired) {
    
    
    
    this.replacementRequired = replacementRequired;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableScoppedReplacement(Boolean enableScoppedReplacement) {
    
    
    
    
    this.enableScoppedReplacement = enableScoppedReplacement;
    return this;
  }

   /**
   * Get enableScoppedReplacement
   * @return enableScoppedReplacement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableScoppedReplacement() {
    return enableScoppedReplacement;
  }


  public void setEnableScoppedReplacement(Boolean enableScoppedReplacement) {
    
    
    
    this.enableScoppedReplacement = enableScoppedReplacement;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableReplacementAway(Boolean enableReplacementAway) {
    
    
    
    
    this.enableReplacementAway = enableReplacementAway;
    return this;
  }

   /**
   * Get enableReplacementAway
   * @return enableReplacementAway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableReplacementAway() {
    return enableReplacementAway;
  }


  public void setEnableReplacementAway(Boolean enableReplacementAway) {
    
    
    
    this.enableReplacementAway = enableReplacementAway;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableDetails(Boolean enableDetails) {
    
    
    
    
    this.enableDetails = enableDetails;
    return this;
  }

   /**
   * Get enableDetails
   * @return enableDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getEnableDetails() {
    return enableDetails;
  }


  public void setEnableDetails(Boolean enableDetails) {
    
    
    
    this.enableDetails = enableDetails;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner requireDetails(Boolean requireDetails) {
    
    
    
    
    this.requireDetails = requireDetails;
    return this;
  }

   /**
   * Get requireDetails
   * @return requireDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getRequireDetails() {
    return requireDetails;
  }


  public void setRequireDetails(Boolean requireDetails) {
    
    
    
    this.requireDetails = requireDetails;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner additionalField(Boolean additionalField) {
    
    
    
    
    this.additionalField = additionalField;
    return this;
  }

   /**
   * Get additionalField
   * @return additionalField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getAdditionalField() {
    return additionalField;
  }


  public void setAdditionalField(Boolean additionalField) {
    
    
    
    this.additionalField = additionalField;
  }


  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner enableAttachment(Boolean enableAttachment) {
    
    
    
    
    this.enableAttachment = enableAttachment;
    return this;
  }

   /**
   * Get enableAttachment
   * @return enableAttachment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getEnableAttachment() {
    return enableAttachment;
  }


  public void setEnableAttachment(Boolean enableAttachment) {
    
    
    
    this.enableAttachment = enableAttachment;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the LeaveManagementGetTimeOffPolicyByIdResponseDataInner instance itself
   */
  public LeaveManagementGetTimeOffPolicyByIdResponseDataInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeaveManagementGetTimeOffPolicyByIdResponseDataInner leaveManagementGetTimeOffPolicyByIdResponseDataInner = (LeaveManagementGetTimeOffPolicyByIdResponseDataInner) o;
    return Objects.equals(this.id, leaveManagementGetTimeOffPolicyByIdResponseDataInner.id) &&
        Objects.equals(this.name, leaveManagementGetTimeOffPolicyByIdResponseDataInner.name) &&
        Objects.equals(this.color, leaveManagementGetTimeOffPolicyByIdResponseDataInner.color) &&
        Objects.equals(this.doNotAccrue, leaveManagementGetTimeOffPolicyByIdResponseDataInner.doNotAccrue) &&
        Objects.equals(this.unit, leaveManagementGetTimeOffPolicyByIdResponseDataInner.unit) &&
        Objects.equals(this.defaultAllowance, leaveManagementGetTimeOffPolicyByIdResponseDataInner.defaultAllowance) &&
        Objects.equals(this.maxCarryover, leaveManagementGetTimeOffPolicyByIdResponseDataInner.maxCarryover) &&
        Objects.equals(this.accrueType, leaveManagementGetTimeOffPolicyByIdResponseDataInner.accrueType) &&
        Objects.equals(this.enableEmployeeAccess, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableEmployeeAccess) &&
        Objects.equals(this.onlyFullDays, leaveManagementGetTimeOffPolicyByIdResponseDataInner.onlyFullDays) &&
        Objects.equals(this.enableProbationPeriod, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableProbationPeriod) &&
        Objects.equals(this.dontAllowNegativeAmount, leaveManagementGetTimeOffPolicyByIdResponseDataInner.dontAllowNegativeAmount) &&
        Objects.equals(this.requestsInAdvanceRequired, leaveManagementGetTimeOffPolicyByIdResponseDataInner.requestsInAdvanceRequired) &&
        Objects.equals(this.enableMinimumDays, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableMinimumDays) &&
        Objects.equals(this.enableLimitedDays, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableLimitedDays) &&
        Objects.equals(this.enableDependentPolicyDoubleQuote, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableDependentPolicyDoubleQuote) &&
        Objects.equals(this.blocksEnabled, leaveManagementGetTimeOffPolicyByIdResponseDataInner.blocksEnabled) &&
        Objects.equals(this.noReset, leaveManagementGetTimeOffPolicyByIdResponseDataInner.noReset) &&
        Objects.equals(this.terminationRecalculation, leaveManagementGetTimeOffPolicyByIdResponseDataInner.terminationRecalculation) &&
        Objects.equals(this.enableServiceAccruals, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableServiceAccruals) &&
        Objects.equals(this.childAllowanceEnabled, leaveManagementGetTimeOffPolicyByIdResponseDataInner.childAllowanceEnabled) &&
        Objects.equals(this.enableNegativeCarryover, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableNegativeCarryover) &&
        Objects.equals(this.maxAccrual, leaveManagementGetTimeOffPolicyByIdResponseDataInner.maxAccrual) &&
        Objects.equals(this.accrueAtStart, leaveManagementGetTimeOffPolicyByIdResponseDataInner.accrueAtStart) &&
        Objects.equals(this.enableMonthlyExpiration, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableMonthlyExpiration) &&
        Objects.equals(this.starterMonthlyAccrualLimitation, leaveManagementGetTimeOffPolicyByIdResponseDataInner.starterMonthlyAccrualLimitation) &&
        Objects.equals(this.starterYearlyAccrualLimitation, leaveManagementGetTimeOffPolicyByIdResponseDataInner.starterYearlyAccrualLimitation) &&
        Objects.equals(this.autoApproves, leaveManagementGetTimeOffPolicyByIdResponseDataInner.autoApproves) &&
        Objects.equals(this.enableSpecificApprovers, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableSpecificApprovers) &&
        Objects.equals(this.overrideApproversEnabled, leaveManagementGetTimeOffPolicyByIdResponseDataInner.overrideApproversEnabled) &&
        Objects.equals(this.enableDuplicateTimeOffs, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableDuplicateTimeOffs) &&
        Objects.equals(this.enableReplacement, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableReplacement) &&
        Objects.equals(this.replacementRequired, leaveManagementGetTimeOffPolicyByIdResponseDataInner.replacementRequired) &&
        Objects.equals(this.enableScoppedReplacement, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableScoppedReplacement) &&
        Objects.equals(this.enableReplacementAway, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableReplacementAway) &&
        Objects.equals(this.enableDetails, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableDetails) &&
        Objects.equals(this.requireDetails, leaveManagementGetTimeOffPolicyByIdResponseDataInner.requireDetails) &&
        Objects.equals(this.additionalField, leaveManagementGetTimeOffPolicyByIdResponseDataInner.additionalField) &&
        Objects.equals(this.enableAttachment, leaveManagementGetTimeOffPolicyByIdResponseDataInner.enableAttachment)&&
        Objects.equals(this.additionalProperties, leaveManagementGetTimeOffPolicyByIdResponseDataInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, color, doNotAccrue, unit, defaultAllowance, maxCarryover, accrueType, enableEmployeeAccess, onlyFullDays, enableProbationPeriod, dontAllowNegativeAmount, requestsInAdvanceRequired, enableMinimumDays, enableLimitedDays, enableDependentPolicyDoubleQuote, blocksEnabled, noReset, terminationRecalculation, enableServiceAccruals, childAllowanceEnabled, enableNegativeCarryover, maxAccrual, accrueAtStart, enableMonthlyExpiration, starterMonthlyAccrualLimitation, starterYearlyAccrualLimitation, autoApproves, enableSpecificApprovers, overrideApproversEnabled, enableDuplicateTimeOffs, enableReplacement, replacementRequired, enableScoppedReplacement, enableReplacementAway, enableDetails, requireDetails, additionalField, enableAttachment, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeaveManagementGetTimeOffPolicyByIdResponseDataInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    doNotAccrue: ").append(toIndentedString(doNotAccrue)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    defaultAllowance: ").append(toIndentedString(defaultAllowance)).append("\n");
    sb.append("    maxCarryover: ").append(toIndentedString(maxCarryover)).append("\n");
    sb.append("    accrueType: ").append(toIndentedString(accrueType)).append("\n");
    sb.append("    enableEmployeeAccess: ").append(toIndentedString(enableEmployeeAccess)).append("\n");
    sb.append("    onlyFullDays: ").append(toIndentedString(onlyFullDays)).append("\n");
    sb.append("    enableProbationPeriod: ").append(toIndentedString(enableProbationPeriod)).append("\n");
    sb.append("    dontAllowNegativeAmount: ").append(toIndentedString(dontAllowNegativeAmount)).append("\n");
    sb.append("    requestsInAdvanceRequired: ").append(toIndentedString(requestsInAdvanceRequired)).append("\n");
    sb.append("    enableMinimumDays: ").append(toIndentedString(enableMinimumDays)).append("\n");
    sb.append("    enableLimitedDays: ").append(toIndentedString(enableLimitedDays)).append("\n");
    sb.append("    enableDependentPolicyDoubleQuote: ").append(toIndentedString(enableDependentPolicyDoubleQuote)).append("\n");
    sb.append("    blocksEnabled: ").append(toIndentedString(blocksEnabled)).append("\n");
    sb.append("    noReset: ").append(toIndentedString(noReset)).append("\n");
    sb.append("    terminationRecalculation: ").append(toIndentedString(terminationRecalculation)).append("\n");
    sb.append("    enableServiceAccruals: ").append(toIndentedString(enableServiceAccruals)).append("\n");
    sb.append("    childAllowanceEnabled: ").append(toIndentedString(childAllowanceEnabled)).append("\n");
    sb.append("    enableNegativeCarryover: ").append(toIndentedString(enableNegativeCarryover)).append("\n");
    sb.append("    maxAccrual: ").append(toIndentedString(maxAccrual)).append("\n");
    sb.append("    accrueAtStart: ").append(toIndentedString(accrueAtStart)).append("\n");
    sb.append("    enableMonthlyExpiration: ").append(toIndentedString(enableMonthlyExpiration)).append("\n");
    sb.append("    starterMonthlyAccrualLimitation: ").append(toIndentedString(starterMonthlyAccrualLimitation)).append("\n");
    sb.append("    starterYearlyAccrualLimitation: ").append(toIndentedString(starterYearlyAccrualLimitation)).append("\n");
    sb.append("    autoApproves: ").append(toIndentedString(autoApproves)).append("\n");
    sb.append("    enableSpecificApprovers: ").append(toIndentedString(enableSpecificApprovers)).append("\n");
    sb.append("    overrideApproversEnabled: ").append(toIndentedString(overrideApproversEnabled)).append("\n");
    sb.append("    enableDuplicateTimeOffs: ").append(toIndentedString(enableDuplicateTimeOffs)).append("\n");
    sb.append("    enableReplacement: ").append(toIndentedString(enableReplacement)).append("\n");
    sb.append("    replacementRequired: ").append(toIndentedString(replacementRequired)).append("\n");
    sb.append("    enableScoppedReplacement: ").append(toIndentedString(enableScoppedReplacement)).append("\n");
    sb.append("    enableReplacementAway: ").append(toIndentedString(enableReplacementAway)).append("\n");
    sb.append("    enableDetails: ").append(toIndentedString(enableDetails)).append("\n");
    sb.append("    requireDetails: ").append(toIndentedString(requireDetails)).append("\n");
    sb.append("    additionalField: ").append(toIndentedString(additionalField)).append("\n");
    sb.append("    enableAttachment: ").append(toIndentedString(enableAttachment)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("color");
    openapiFields.add("do_not_accrue");
    openapiFields.add("unit");
    openapiFields.add("default_allowance");
    openapiFields.add("max_carryover");
    openapiFields.add("accrue_type");
    openapiFields.add("enable_employee_access");
    openapiFields.add("only_full_days");
    openapiFields.add("enable_probation_period");
    openapiFields.add("dont_allow_negative_amount");
    openapiFields.add("requests_in_advance_required");
    openapiFields.add("enable_minimum_days");
    openapiFields.add("enable_limited_days");
    openapiFields.add("enable_dependent_policy&quot;");
    openapiFields.add("blocks_enabled");
    openapiFields.add("no_reset");
    openapiFields.add("termination_recalculation");
    openapiFields.add("enable_service_accruals");
    openapiFields.add("child_allowance_enabled");
    openapiFields.add("enable_negative_carryover");
    openapiFields.add("max_accrual");
    openapiFields.add("accrue_at_start");
    openapiFields.add("enable_monthly_expiration");
    openapiFields.add("starter_monthly_accrual_limitation");
    openapiFields.add("starter_yearly_accrual_limitation");
    openapiFields.add("auto_approves");
    openapiFields.add("enable_specific_approvers");
    openapiFields.add("override_approvers_enabled");
    openapiFields.add("enable_duplicate_time_offs");
    openapiFields.add("enable_replacement");
    openapiFields.add("replacement_required");
    openapiFields.add("enable_scopped_replacement");
    openapiFields.add("enable_replacement_away");
    openapiFields.add("enable_details");
    openapiFields.add("require_details");
    openapiFields.add("additional_field");
    openapiFields.add("enable_attachment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to LeaveManagementGetTimeOffPolicyByIdResponseDataInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!LeaveManagementGetTimeOffPolicyByIdResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LeaveManagementGetTimeOffPolicyByIdResponseDataInner is not found in the empty JSON string", LeaveManagementGetTimeOffPolicyByIdResponseDataInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if ((jsonObj.get("unit") != null && !jsonObj.get("unit").isJsonNull()) && !jsonObj.get("unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit").toString()));
      }
      if ((jsonObj.get("default_allowance") != null && !jsonObj.get("default_allowance").isJsonNull()) && !jsonObj.get("default_allowance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_allowance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_allowance").toString()));
      }
      if ((jsonObj.get("max_carryover") != null && !jsonObj.get("max_carryover").isJsonNull()) && !jsonObj.get("max_carryover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_carryover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_carryover").toString()));
      }
      if ((jsonObj.get("accrue_type") != null && !jsonObj.get("accrue_type").isJsonNull()) && !jsonObj.get("accrue_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accrue_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accrue_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LeaveManagementGetTimeOffPolicyByIdResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LeaveManagementGetTimeOffPolicyByIdResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LeaveManagementGetTimeOffPolicyByIdResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LeaveManagementGetTimeOffPolicyByIdResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<LeaveManagementGetTimeOffPolicyByIdResponseDataInner>() {
           @Override
           public void write(JsonWriter out, LeaveManagementGetTimeOffPolicyByIdResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public LeaveManagementGetTimeOffPolicyByIdResponseDataInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             LeaveManagementGetTimeOffPolicyByIdResponseDataInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LeaveManagementGetTimeOffPolicyByIdResponseDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LeaveManagementGetTimeOffPolicyByIdResponseDataInner
  * @throws IOException if the JSON string is invalid with respect to LeaveManagementGetTimeOffPolicyByIdResponseDataInner
  */
  public static LeaveManagementGetTimeOffPolicyByIdResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LeaveManagementGetTimeOffPolicyByIdResponseDataInner.class);
  }

 /**
  * Convert an instance of LeaveManagementGetTimeOffPolicyByIdResponseDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

