/*
 * Sage HR API
 * All requests are required to be sent to your subdomain. To learn how to enable API in your Sage HR account, please visit https://support.sage.hr/en/articles/3246469-how-does-cakehr-api-work
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * IntegrationsTransferTimeScheduleInformationResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class IntegrationsTransferTimeScheduleInformationResponseData {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employee_id";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private Double employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employee_number";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private Double employeeNumber;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_STAND_BY = "stand_by";
  @SerializedName(SERIALIZED_NAME_STAND_BY)
  private Double standBy;

  public static final String SERIALIZED_NAME_HOURS = "hours";
  @SerializedName(SERIALIZED_NAME_HOURS)
  private Double hours;

  public static final String SERIALIZED_NAME_NIGHTOURS = "nightours";
  @SerializedName(SERIALIZED_NAME_NIGHTOURS)
  private Double nightours;

  public static final String SERIALIZED_NAME_COST_CENTER_CODE = "cost_center_code";
  @SerializedName(SERIALIZED_NAME_COST_CENTER_CODE)
  private String costCenterCode;

  public static final String SERIALIZED_NAME_OVERTIME_TITLE = "overtime_title";
  @SerializedName(SERIALIZED_NAME_OVERTIME_TITLE)
  private Double overtimeTitle;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Double status;

  public IntegrationsTransferTimeScheduleInformationResponseData() {
  }

  public IntegrationsTransferTimeScheduleInformationResponseData employeeId(Double employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData employeeId(Integer employeeId) {
    
    
    
    
    this.employeeId = employeeId.doubleValue();
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Double getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(Double employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData employeeNumber(Double employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData employeeNumber(Integer employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber.doubleValue();
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "")

  public Double getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(Double employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData date(String date) {
    
    
    
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-10-10", value = "")

  public String getDate() {
    return date;
  }


  public void setDate(String date) {
    
    
    
    this.date = date;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData standBy(Double standBy) {
    
    
    
    
    this.standBy = standBy;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData standBy(Integer standBy) {
    
    
    
    
    this.standBy = standBy.doubleValue();
    return this;
  }

   /**
   * Get standBy
   * @return standBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "")

  public Double getStandBy() {
    return standBy;
  }


  public void setStandBy(Double standBy) {
    
    
    
    this.standBy = standBy;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData hours(Double hours) {
    
    
    
    
    this.hours = hours;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData hours(Integer hours) {
    
    
    
    
    this.hours = hours.doubleValue();
    return this;
  }

   /**
   * Get hours
   * @return hours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8.5", value = "")

  public Double getHours() {
    return hours;
  }


  public void setHours(Double hours) {
    
    
    
    this.hours = hours;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData nightours(Double nightours) {
    
    
    
    
    this.nightours = nightours;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData nightours(Integer nightours) {
    
    
    
    
    this.nightours = nightours.doubleValue();
    return this;
  }

   /**
   * Get nightours
   * @return nightours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.5", value = "")

  public Double getNightours() {
    return nightours;
  }


  public void setNightours(Double nightours) {
    
    
    
    this.nightours = nightours;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData costCenterCode(String costCenterCode) {
    
    
    
    
    this.costCenterCode = costCenterCode;
    return this;
  }

   /**
   * Get costCenterCode
   * @return costCenterCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cost center code (custom field)", value = "")

  public String getCostCenterCode() {
    return costCenterCode;
  }


  public void setCostCenterCode(String costCenterCode) {
    
    
    
    this.costCenterCode = costCenterCode;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData overtimeTitle(Double overtimeTitle) {
    
    
    
    
    this.overtimeTitle = overtimeTitle;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData overtimeTitle(Integer overtimeTitle) {
    
    
    
    
    this.overtimeTitle = overtimeTitle.doubleValue();
    return this;
  }

   /**
   * Get overtimeTitle
   * @return overtimeTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.5", value = "")

  public Double getOvertimeTitle() {
    return overtimeTitle;
  }


  public void setOvertimeTitle(Double overtimeTitle) {
    
    
    
    this.overtimeTitle = overtimeTitle;
  }


  public IntegrationsTransferTimeScheduleInformationResponseData status(Double status) {
    
    
    
    
    this.status = status;
    return this;
  }

  public IntegrationsTransferTimeScheduleInformationResponseData status(Integer status) {
    
    
    
    
    this.status = status.doubleValue();
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Double getStatus() {
    return status;
  }


  public void setStatus(Double status) {
    
    
    
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the IntegrationsTransferTimeScheduleInformationResponseData instance itself
   */
  public IntegrationsTransferTimeScheduleInformationResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationsTransferTimeScheduleInformationResponseData integrationsTransferTimeScheduleInformationResponseData = (IntegrationsTransferTimeScheduleInformationResponseData) o;
    return Objects.equals(this.employeeId, integrationsTransferTimeScheduleInformationResponseData.employeeId) &&
        Objects.equals(this.employeeNumber, integrationsTransferTimeScheduleInformationResponseData.employeeNumber) &&
        Objects.equals(this.date, integrationsTransferTimeScheduleInformationResponseData.date) &&
        Objects.equals(this.standBy, integrationsTransferTimeScheduleInformationResponseData.standBy) &&
        Objects.equals(this.hours, integrationsTransferTimeScheduleInformationResponseData.hours) &&
        Objects.equals(this.nightours, integrationsTransferTimeScheduleInformationResponseData.nightours) &&
        Objects.equals(this.costCenterCode, integrationsTransferTimeScheduleInformationResponseData.costCenterCode) &&
        Objects.equals(this.overtimeTitle, integrationsTransferTimeScheduleInformationResponseData.overtimeTitle) &&
        Objects.equals(this.status, integrationsTransferTimeScheduleInformationResponseData.status)&&
        Objects.equals(this.additionalProperties, integrationsTransferTimeScheduleInformationResponseData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, employeeNumber, date, standBy, hours, nightours, costCenterCode, overtimeTitle, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationsTransferTimeScheduleInformationResponseData {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    standBy: ").append(toIndentedString(standBy)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    nightours: ").append(toIndentedString(nightours)).append("\n");
    sb.append("    costCenterCode: ").append(toIndentedString(costCenterCode)).append("\n");
    sb.append("    overtimeTitle: ").append(toIndentedString(overtimeTitle)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employee_id");
    openapiFields.add("employee_number");
    openapiFields.add("date");
    openapiFields.add("stand_by");
    openapiFields.add("hours");
    openapiFields.add("nightours");
    openapiFields.add("cost_center_code");
    openapiFields.add("overtime_title");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to IntegrationsTransferTimeScheduleInformationResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!IntegrationsTransferTimeScheduleInformationResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IntegrationsTransferTimeScheduleInformationResponseData is not found in the empty JSON string", IntegrationsTransferTimeScheduleInformationResponseData.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("cost_center_code") != null && !jsonObj.get("cost_center_code").isJsonNull()) && !jsonObj.get("cost_center_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cost_center_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cost_center_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IntegrationsTransferTimeScheduleInformationResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IntegrationsTransferTimeScheduleInformationResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IntegrationsTransferTimeScheduleInformationResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IntegrationsTransferTimeScheduleInformationResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<IntegrationsTransferTimeScheduleInformationResponseData>() {
           @Override
           public void write(JsonWriter out, IntegrationsTransferTimeScheduleInformationResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public IntegrationsTransferTimeScheduleInformationResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             IntegrationsTransferTimeScheduleInformationResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of IntegrationsTransferTimeScheduleInformationResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of IntegrationsTransferTimeScheduleInformationResponseData
  * @throws IOException if the JSON string is invalid with respect to IntegrationsTransferTimeScheduleInformationResponseData
  */
  public static IntegrationsTransferTimeScheduleInformationResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IntegrationsTransferTimeScheduleInformationResponseData.class);
  }

 /**
  * Convert an instance of IntegrationsTransferTimeScheduleInformationResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

