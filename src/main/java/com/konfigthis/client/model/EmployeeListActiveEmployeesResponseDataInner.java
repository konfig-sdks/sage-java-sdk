/*
 * Sage HR API
 * All requests are required to be sent to your subdomain. To learn how to enable API in your Sage HR account, please visit https://support.sage.hr/en/articles/3246469-how-does-cakehr-api-work
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner;
import com.konfigthis.client.model.EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner;
import com.konfigthis.client.model.EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeListActiveEmployeesResponseDataInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeListActiveEmployeesResponseDataInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Double id;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PICTURE_URL = "picture_url";
  @SerializedName(SERIALIZED_NAME_PICTURE_URL)
  private String pictureUrl;

  public static final String SERIALIZED_NAME_EMPLOYMENT_START_DATE = "employment_start_date";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_START_DATE)
  private String employmentStartDate;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "date_of_birth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_ID = "team_id";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Double teamId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_POSITION_ID = "position_id";
  @SerializedName(SERIALIZED_NAME_POSITION_ID)
  private Double positionId;

  public static final String SERIALIZED_NAME_REPORTS_TO_EMPLOYEE_ID = "reports_to_employee_id";
  @SerializedName(SERIALIZED_NAME_REPORTS_TO_EMPLOYEE_ID)
  private Double reportsToEmployeeId;

  public static final String SERIALIZED_NAME_WORK_PHONE = "work_phone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_HOME_PHONE = "home_phone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobile_phone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private String mobilePhone;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_STREET_FIRST = "street_first";
  @SerializedName(SERIALIZED_NAME_STREET_FIRST)
  private String streetFirst;

  public static final String SERIALIZED_NAME_STREET_SECOND = "street_second";
  @SerializedName(SERIALIZED_NAME_STREET_SECOND)
  private String streetSecond;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_POST_CODE = "post_code";
  @SerializedName(SERIALIZED_NAME_POST_CODE)
  private Double postCode;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employee_number";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS = "employment_status";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS)
  private String employmentStatus;

  public static final String SERIALIZED_NAME_TEAM_HISTORY = "team_history";
  @SerializedName(SERIALIZED_NAME_TEAM_HISTORY)
  private List<EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner> teamHistory = null;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS_HISTORY = "employment_status_history";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS_HISTORY)
  private List<EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner> employmentStatusHistory = null;

  public static final String SERIALIZED_NAME_POSITION_HISTORY = "position_history";
  @SerializedName(SERIALIZED_NAME_POSITION_HISTORY)
  private List<EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner> positionHistory = null;

  public EmployeeListActiveEmployeesResponseDataInner() {
  }

  public EmployeeListActiveEmployeesResponseDataInner id(Double id) {
    
    
    
    
    this.id = id;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner id(Integer id) {
    
    
    
    
    this.id = id.doubleValue();
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "19", value = "")

  public Double getId() {
    return id;
  }


  public void setId(Double id) {
    
    
    
    this.id = id;
  }


  public EmployeeListActiveEmployeesResponseDataInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "john@example.com", value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public EmployeeListActiveEmployeesResponseDataInner firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John", value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeListActiveEmployeesResponseDataInner lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Doe", value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeListActiveEmployeesResponseDataInner pictureUrl(String pictureUrl) {
    
    
    
    
    this.pictureUrl = pictureUrl;
    return this;
  }

   /**
   * Get pictureUrl
   * @return pictureUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com/john.png", value = "")

  public String getPictureUrl() {
    return pictureUrl;
  }


  public void setPictureUrl(String pictureUrl) {
    
    
    
    this.pictureUrl = pictureUrl;
  }


  public EmployeeListActiveEmployeesResponseDataInner employmentStartDate(String employmentStartDate) {
    
    
    
    
    this.employmentStartDate = employmentStartDate;
    return this;
  }

   /**
   * Get employmentStartDate
   * @return employmentStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2014-08-25", value = "")

  public String getEmploymentStartDate() {
    return employmentStartDate;
  }


  public void setEmploymentStartDate(String employmentStartDate) {
    
    
    
    this.employmentStartDate = employmentStartDate;
  }


  public EmployeeListActiveEmployeesResponseDataInner dateOfBirth(String dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1991-02-13", value = "")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public EmployeeListActiveEmployeesResponseDataInner team(String team) {
    
    
    
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sage HR", value = "")

  public String getTeam() {
    return team;
  }


  public void setTeam(String team) {
    
    
    
    this.team = team;
  }


  public EmployeeListActiveEmployeesResponseDataInner teamId(Double teamId) {
    
    
    
    
    this.teamId = teamId;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner teamId(Integer teamId) {
    
    
    
    
    this.teamId = teamId.doubleValue();
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Double getTeamId() {
    return teamId;
  }


  public void setTeamId(Double teamId) {
    
    
    
    this.teamId = teamId;
  }


  public EmployeeListActiveEmployeesResponseDataInner position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Api developer", value = "")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public EmployeeListActiveEmployeesResponseDataInner positionId(Double positionId) {
    
    
    
    
    this.positionId = positionId;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner positionId(Integer positionId) {
    
    
    
    
    this.positionId = positionId.doubleValue();
    return this;
  }

   /**
   * Get positionId
   * @return positionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "")

  public Double getPositionId() {
    return positionId;
  }


  public void setPositionId(Double positionId) {
    
    
    
    this.positionId = positionId;
  }


  public EmployeeListActiveEmployeesResponseDataInner reportsToEmployeeId(Double reportsToEmployeeId) {
    
    
    
    
    this.reportsToEmployeeId = reportsToEmployeeId;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner reportsToEmployeeId(Integer reportsToEmployeeId) {
    
    
    
    
    this.reportsToEmployeeId = reportsToEmployeeId.doubleValue();
    return this;
  }

   /**
   * Get reportsToEmployeeId
   * @return reportsToEmployeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "")

  public Double getReportsToEmployeeId() {
    return reportsToEmployeeId;
  }


  public void setReportsToEmployeeId(Double reportsToEmployeeId) {
    
    
    
    this.reportsToEmployeeId = reportsToEmployeeId;
  }


  public EmployeeListActiveEmployeesResponseDataInner workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Get workPhone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "555-0505", value = "")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeeListActiveEmployeesResponseDataInner homePhone(String homePhone) {
    
    
    
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Get homePhone
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "555-0506", value = "")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    
    
    
    this.homePhone = homePhone;
  }


  public EmployeeListActiveEmployeesResponseDataInner mobilePhone(String mobilePhone) {
    
    
    
    
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "555-0507", value = "")

  public String getMobilePhone() {
    return mobilePhone;
  }


  public void setMobilePhone(String mobilePhone) {
    
    
    
    this.mobilePhone = mobilePhone;
  }


  public EmployeeListActiveEmployeesResponseDataInner gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Male", value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeListActiveEmployeesResponseDataInner streetFirst(String streetFirst) {
    
    
    
    
    this.streetFirst = streetFirst;
    return this;
  }

   /**
   * Get streetFirst
   * @return streetFirst
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "84 Glenwood Street", value = "")

  public String getStreetFirst() {
    return streetFirst;
  }


  public void setStreetFirst(String streetFirst) {
    
    
    
    this.streetFirst = streetFirst;
  }


  public EmployeeListActiveEmployeesResponseDataInner streetSecond(String streetSecond) {
    
    
    
    
    this.streetSecond = streetSecond;
    return this;
  }

   /**
   * Get streetSecond
   * @return streetSecond
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Peoria", value = "")

  public String getStreetSecond() {
    return streetSecond;
  }


  public void setStreetSecond(String streetSecond) {
    
    
    
    this.streetSecond = streetSecond;
  }


  public EmployeeListActiveEmployeesResponseDataInner city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "London", value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EmployeeListActiveEmployeesResponseDataInner postCode(Double postCode) {
    
    
    
    
    this.postCode = postCode;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner postCode(Integer postCode) {
    
    
    
    
    this.postCode = postCode.doubleValue();
    return this;
  }

   /**
   * Get postCode
   * @return postCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "99999", value = "")

  public Double getPostCode() {
    return postCode;
  }


  public void setPostCode(Double postCode) {
    
    
    
    this.postCode = postCode;
  }


  public EmployeeListActiveEmployeesResponseDataInner country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GB", value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public EmployeeListActiveEmployeesResponseDataInner employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A01", value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmployeeListActiveEmployeesResponseDataInner employmentStatus(String employmentStatus) {
    
    
    
    
    this.employmentStatus = employmentStatus;
    return this;
  }

   /**
   * Get employmentStatus
   * @return employmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Full-time", value = "")

  public String getEmploymentStatus() {
    return employmentStatus;
  }


  public void setEmploymentStatus(String employmentStatus) {
    
    
    
    this.employmentStatus = employmentStatus;
  }


  public EmployeeListActiveEmployeesResponseDataInner teamHistory(List<EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner> teamHistory) {
    
    
    
    
    this.teamHistory = teamHistory;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner addTeamHistoryItem(EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner teamHistoryItem) {
    if (this.teamHistory == null) {
      this.teamHistory = new ArrayList<>();
    }
    this.teamHistory.add(teamHistoryItem);
    return this;
  }

   /**
   * Get teamHistory
   * @return teamHistory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner> getTeamHistory() {
    return teamHistory;
  }


  public void setTeamHistory(List<EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner> teamHistory) {
    
    
    
    this.teamHistory = teamHistory;
  }


  public EmployeeListActiveEmployeesResponseDataInner employmentStatusHistory(List<EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner> employmentStatusHistory) {
    
    
    
    
    this.employmentStatusHistory = employmentStatusHistory;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner addEmploymentStatusHistoryItem(EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner employmentStatusHistoryItem) {
    if (this.employmentStatusHistory == null) {
      this.employmentStatusHistory = new ArrayList<>();
    }
    this.employmentStatusHistory.add(employmentStatusHistoryItem);
    return this;
  }

   /**
   * Get employmentStatusHistory
   * @return employmentStatusHistory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner> getEmploymentStatusHistory() {
    return employmentStatusHistory;
  }


  public void setEmploymentStatusHistory(List<EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner> employmentStatusHistory) {
    
    
    
    this.employmentStatusHistory = employmentStatusHistory;
  }


  public EmployeeListActiveEmployeesResponseDataInner positionHistory(List<EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner> positionHistory) {
    
    
    
    
    this.positionHistory = positionHistory;
    return this;
  }

  public EmployeeListActiveEmployeesResponseDataInner addPositionHistoryItem(EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner positionHistoryItem) {
    if (this.positionHistory == null) {
      this.positionHistory = new ArrayList<>();
    }
    this.positionHistory.add(positionHistoryItem);
    return this;
  }

   /**
   * Get positionHistory
   * @return positionHistory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner> getPositionHistory() {
    return positionHistory;
  }


  public void setPositionHistory(List<EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner> positionHistory) {
    
    
    
    this.positionHistory = positionHistory;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeListActiveEmployeesResponseDataInner instance itself
   */
  public EmployeeListActiveEmployeesResponseDataInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeListActiveEmployeesResponseDataInner employeeListActiveEmployeesResponseDataInner = (EmployeeListActiveEmployeesResponseDataInner) o;
    return Objects.equals(this.id, employeeListActiveEmployeesResponseDataInner.id) &&
        Objects.equals(this.email, employeeListActiveEmployeesResponseDataInner.email) &&
        Objects.equals(this.firstName, employeeListActiveEmployeesResponseDataInner.firstName) &&
        Objects.equals(this.lastName, employeeListActiveEmployeesResponseDataInner.lastName) &&
        Objects.equals(this.pictureUrl, employeeListActiveEmployeesResponseDataInner.pictureUrl) &&
        Objects.equals(this.employmentStartDate, employeeListActiveEmployeesResponseDataInner.employmentStartDate) &&
        Objects.equals(this.dateOfBirth, employeeListActiveEmployeesResponseDataInner.dateOfBirth) &&
        Objects.equals(this.team, employeeListActiveEmployeesResponseDataInner.team) &&
        Objects.equals(this.teamId, employeeListActiveEmployeesResponseDataInner.teamId) &&
        Objects.equals(this.position, employeeListActiveEmployeesResponseDataInner.position) &&
        Objects.equals(this.positionId, employeeListActiveEmployeesResponseDataInner.positionId) &&
        Objects.equals(this.reportsToEmployeeId, employeeListActiveEmployeesResponseDataInner.reportsToEmployeeId) &&
        Objects.equals(this.workPhone, employeeListActiveEmployeesResponseDataInner.workPhone) &&
        Objects.equals(this.homePhone, employeeListActiveEmployeesResponseDataInner.homePhone) &&
        Objects.equals(this.mobilePhone, employeeListActiveEmployeesResponseDataInner.mobilePhone) &&
        Objects.equals(this.gender, employeeListActiveEmployeesResponseDataInner.gender) &&
        Objects.equals(this.streetFirst, employeeListActiveEmployeesResponseDataInner.streetFirst) &&
        Objects.equals(this.streetSecond, employeeListActiveEmployeesResponseDataInner.streetSecond) &&
        Objects.equals(this.city, employeeListActiveEmployeesResponseDataInner.city) &&
        Objects.equals(this.postCode, employeeListActiveEmployeesResponseDataInner.postCode) &&
        Objects.equals(this.country, employeeListActiveEmployeesResponseDataInner.country) &&
        Objects.equals(this.employeeNumber, employeeListActiveEmployeesResponseDataInner.employeeNumber) &&
        Objects.equals(this.employmentStatus, employeeListActiveEmployeesResponseDataInner.employmentStatus) &&
        Objects.equals(this.teamHistory, employeeListActiveEmployeesResponseDataInner.teamHistory) &&
        Objects.equals(this.employmentStatusHistory, employeeListActiveEmployeesResponseDataInner.employmentStatusHistory) &&
        Objects.equals(this.positionHistory, employeeListActiveEmployeesResponseDataInner.positionHistory)&&
        Objects.equals(this.additionalProperties, employeeListActiveEmployeesResponseDataInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, firstName, lastName, pictureUrl, employmentStartDate, dateOfBirth, team, teamId, position, positionId, reportsToEmployeeId, workPhone, homePhone, mobilePhone, gender, streetFirst, streetSecond, city, postCode, country, employeeNumber, employmentStatus, teamHistory, employmentStatusHistory, positionHistory, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeListActiveEmployeesResponseDataInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    pictureUrl: ").append(toIndentedString(pictureUrl)).append("\n");
    sb.append("    employmentStartDate: ").append(toIndentedString(employmentStartDate)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionId: ").append(toIndentedString(positionId)).append("\n");
    sb.append("    reportsToEmployeeId: ").append(toIndentedString(reportsToEmployeeId)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    streetFirst: ").append(toIndentedString(streetFirst)).append("\n");
    sb.append("    streetSecond: ").append(toIndentedString(streetSecond)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    employmentStatus: ").append(toIndentedString(employmentStatus)).append("\n");
    sb.append("    teamHistory: ").append(toIndentedString(teamHistory)).append("\n");
    sb.append("    employmentStatusHistory: ").append(toIndentedString(employmentStatusHistory)).append("\n");
    sb.append("    positionHistory: ").append(toIndentedString(positionHistory)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("email");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("picture_url");
    openapiFields.add("employment_start_date");
    openapiFields.add("date_of_birth");
    openapiFields.add("team");
    openapiFields.add("team_id");
    openapiFields.add("position");
    openapiFields.add("position_id");
    openapiFields.add("reports_to_employee_id");
    openapiFields.add("work_phone");
    openapiFields.add("home_phone");
    openapiFields.add("mobile_phone");
    openapiFields.add("gender");
    openapiFields.add("street_first");
    openapiFields.add("street_second");
    openapiFields.add("city");
    openapiFields.add("post_code");
    openapiFields.add("country");
    openapiFields.add("employee_number");
    openapiFields.add("employment_status");
    openapiFields.add("team_history");
    openapiFields.add("employment_status_history");
    openapiFields.add("position_history");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeListActiveEmployeesResponseDataInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeListActiveEmployeesResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeListActiveEmployeesResponseDataInner is not found in the empty JSON string", EmployeeListActiveEmployeesResponseDataInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("picture_url") != null && !jsonObj.get("picture_url").isJsonNull()) && !jsonObj.get("picture_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture_url").toString()));
      }
      if ((jsonObj.get("employment_start_date") != null && !jsonObj.get("employment_start_date").isJsonNull()) && !jsonObj.get("employment_start_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employment_start_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employment_start_date").toString()));
      }
      if ((jsonObj.get("date_of_birth") != null && !jsonObj.get("date_of_birth").isJsonNull()) && !jsonObj.get("date_of_birth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_of_birth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_of_birth").toString()));
      }
      if ((jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) && !jsonObj.get("team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("team").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("work_phone") != null && !jsonObj.get("work_phone").isJsonNull()) && !jsonObj.get("work_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_phone").toString()));
      }
      if ((jsonObj.get("home_phone") != null && !jsonObj.get("home_phone").isJsonNull()) && !jsonObj.get("home_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_phone").toString()));
      }
      if ((jsonObj.get("mobile_phone") != null && !jsonObj.get("mobile_phone").isJsonNull()) && !jsonObj.get("mobile_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile_phone").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("street_first") != null && !jsonObj.get("street_first").isJsonNull()) && !jsonObj.get("street_first").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street_first` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street_first").toString()));
      }
      if ((jsonObj.get("street_second") != null && !jsonObj.get("street_second").isJsonNull()) && !jsonObj.get("street_second").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street_second` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street_second").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("employee_number") != null && !jsonObj.get("employee_number").isJsonNull()) && !jsonObj.get("employee_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_number").toString()));
      }
      if ((jsonObj.get("employment_status") != null && !jsonObj.get("employment_status").isJsonNull()) && !jsonObj.get("employment_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employment_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employment_status").toString()));
      }
      if (jsonObj.get("team_history") != null && !jsonObj.get("team_history").isJsonNull()) {
        JsonArray jsonArrayteamHistory = jsonObj.getAsJsonArray("team_history");
        if (jsonArrayteamHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("team_history").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `team_history` to be an array in the JSON string but got `%s`", jsonObj.get("team_history").toString()));
          }

          // validate the optional field `team_history` (array)
          for (int i = 0; i < jsonArrayteamHistory.size(); i++) {
            EmployeeListActiveEmployeesResponseDataInnerTeamHistoryInner.validateJsonObject(jsonArrayteamHistory.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("employment_status_history") != null && !jsonObj.get("employment_status_history").isJsonNull()) {
        JsonArray jsonArrayemploymentStatusHistory = jsonObj.getAsJsonArray("employment_status_history");
        if (jsonArrayemploymentStatusHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("employment_status_history").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `employment_status_history` to be an array in the JSON string but got `%s`", jsonObj.get("employment_status_history").toString()));
          }

          // validate the optional field `employment_status_history` (array)
          for (int i = 0; i < jsonArrayemploymentStatusHistory.size(); i++) {
            EmployeeListActiveEmployeesResponseDataInnerEmploymentStatusHistoryInner.validateJsonObject(jsonArrayemploymentStatusHistory.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("position_history") != null && !jsonObj.get("position_history").isJsonNull()) {
        JsonArray jsonArraypositionHistory = jsonObj.getAsJsonArray("position_history");
        if (jsonArraypositionHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("position_history").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `position_history` to be an array in the JSON string but got `%s`", jsonObj.get("position_history").toString()));
          }

          // validate the optional field `position_history` (array)
          for (int i = 0; i < jsonArraypositionHistory.size(); i++) {
            EmployeeListActiveEmployeesResponseDataInnerPositionHistoryInner.validateJsonObject(jsonArraypositionHistory.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeListActiveEmployeesResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeListActiveEmployeesResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeListActiveEmployeesResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeListActiveEmployeesResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeListActiveEmployeesResponseDataInner>() {
           @Override
           public void write(JsonWriter out, EmployeeListActiveEmployeesResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeListActiveEmployeesResponseDataInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeListActiveEmployeesResponseDataInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeListActiveEmployeesResponseDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeListActiveEmployeesResponseDataInner
  * @throws IOException if the JSON string is invalid with respect to EmployeeListActiveEmployeesResponseDataInner
  */
  public static EmployeeListActiveEmployeesResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeListActiveEmployeesResponseDataInner.class);
  }

 /**
  * Convert an instance of EmployeeListActiveEmployeesResponseDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

